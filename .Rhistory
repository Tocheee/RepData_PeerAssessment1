knitr::opts_chunk$set(echo = TRUE)
setwd("~/users/tochi/Documents/R/RepData_PeerAssessment1-master")
setwd("~/R/RepData_PeerAssessment1-master")
setwd("~/R/RepData_PeerAssessment1-master")
library(data.table)#for subsetting
library(dplyr) #for data cleaning and manipulation
library(ggplot2) #for visualization
library(knitr)# to create the html report
opts_chunk$set(fig.path = "./figure/")
zipd <- unzip(activity.)
library(data.table)#for subsetting
library(dplyr) #for data cleaning and manipulation
library(ggplot2) #for visualization
library(knitr)# to create the html report
opts_chunk$set(fig.path = "./figure/")
zipd <- unzip(activity.zip)
getwd()
library(data.table)#for subsetting
library(dplyr) #for data cleaning and manipulation
library(ggplot2) #for visualization
library(knitr)# to create the html report
opts_chunk$set(fig.path = "./figure/")
zipd <- unzip("activity.zip")
data <- fread("activity.csv")
head(data)
summary(data)
class(data$date)
library(lubridate)
data$date <- ymd(data$date)
print(class(data$date))
totalsteps <- data[,sum(steps),date]
head(totalsteps)
mean(totalsteps$V1,na.rm=TRUE)
median(totalsteps$V1,na.rm=TRUE)
#Creating the histogram and adding labels
hist(totalsteps$V1,xlab="Total Steps per Day",main="Histogram of Total Steps per Day",col="lightblue")
#Adding a vertical line with to indicate the mean
abline(v=c(mean(totalsteps$V1,na.rm=TRUE)), col=c("red"),lwd=3,lty=3)
text(x=mean(totalsteps$V1,na.rm=TRUE),y=0,"10766",pos=3)
#Adding the legend for ease of interpretation
legend("topright","mean and median",col="red",lty=3)
avgsteps <- data[,round(mean(steps,na.rm=TRUE)),interval]
head(avgsteps)
plot(x = avgsteps$interval,y=avgsteps$V1,type='l', xlab="Interval",ylab="Steps",main="Average Steps per 5 min interval")
#subset the avgsteps dataset to get the maximum interval
max_interval <- avgsteps[which(avgsteps$V1==max(avgsteps$V1))]
max_interval
#Subset the dataset to calculate the mean steps per interval
avgsteps <- data[,round(mean(steps,na.rm=TRUE)),interval]
plot(x = avgsteps$interval,y=avgsteps$V1,type='l', xlab="Interval",ylab="Steps",main="Average Steps per 5 min interval")
#Adding text to display the max interval
text(max_interval$interval,0,"835",pos=2)
#Adding the legend for ease of interpretation
legend("topright","Max Interval",col="red",lty=1)
#Adding the vertical line at the maximum interval 835
abline(v=max_interval$interval,col="red")
#Total missing values in the dataset
sum(is.na(data))
#Total missing values in the interval column
(sum(is.na(data$interval)))
#Total missing values in the steps column
print(sum(is.na(data$steps)))
#Using dplyr, add the replace_steps column with filled in values
#If the value in the steps column is missing, use the match function to find its appropriate average steps
#Pass the new dataset to the mutate function using the pipe operator
#Drop the old steps column
no_na <- mutate(data,replace_steps = ifelse(is.na(steps),avgsteps$V1[match(interval,avgsteps$interval)],steps)) %>% mutate(steps=NULL)
#Compare the two datasets (imputed data(no_na) vs missing data(data))
print(head(no_na))
print(head(data))
#Convert the no_na from a data.frame object to a data.table for ease of subsetting
no_na <- as.data.table(no_na)
# Select all rows and sum the replace_steps column while grouping by date
plot_data <- no_na[,sum(replace_steps),date]
#Create a histogram using the plot_data table
hist(plot_data$V1,xlab="Total Steps",col="lightblue", main="Distribution of Total Steps per Day")
#Add a vertical line to indicte the mean
abline(v=c(mean(plot_data$V1,mean(totalsteps$V1,na.rm=TRUE))),col=c("blue","red"),lty=2)
text(x=mean(plot_data$V1),y=0,"10766",pos=3)
# Add the legend for ease of interpretation
legend("topright","Mean",col="blue",lty=2)
print(mean(plot_data$V1))
print(median(plot_data$V1))
#Imputed mean
mean(plot_data$V1)
#Mean without na
mean(totalsteps$V1,na.rm=TRUE)
#Create a list of weekdays
days <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
#Check if each date is in the weekdays list and print weekday or weekends correspondingly
no_na <- mutate(no_na,type_of_day = ifelse(weekdays(no_na$date) %in% days,"weekday","weekend"))
head(no_na)
#Subset no_na by selecting the date and type_of day columns,
#Calculate the mean of the replace_steps column and group by interval
no_na <- as.data.table(no_na)
plotting_data <- no_na[,.(date,type_of_day,round(mean(replace_steps))),.(interval)]
head(plotting_data)
p <- plotting_data %>% ggplot(aes(interval,V3))
p + geom_line() + facet_grid(type_of_day~.,switch = "y") + ylab("Average Steps") + xlab("Interval") + ggtitle("Average Steps Taken per Day")
knit2html("PA1_template.Rmd",force_v1 = TRUE)
